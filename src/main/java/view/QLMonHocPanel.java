/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import dao.MonHocDao;
import helper.DataValidator;
import helper.MessageDialogHelper;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.MonHoc;

/**
 *
 * @author Thuan
 */
public class QLMonHocPanel extends javax.swing.JPanel {
    private MainFrame parentFrame;
    private DefaultTableModel defaultTableModel;
    
    
    /**
     * Creates new form QLMonHocPanel
     */
    public QLMonHocPanel() {
        initComponents();
        initTable();
        loadDataToTable();
    }
    
    private void initTable() {
        defaultTableModel = new DefaultTableModel();
        defaultTableModel.setColumnIdentifiers(new String[]{"Mã môn", "Tên môn", "Số tín chỉ"});
        tblMonHoc.setModel(defaultTableModel);
    }
    private void loadDataToTable(){
        MonHocDao monHocDao = new MonHocDao();
        
        defaultTableModel.setRowCount(0);
        
        try {
            List<MonHoc> list = monHocDao.findAll();
            for(MonHoc mh : list){
               defaultTableModel.addRow(new Object[]{
                mh.getMaMon(), mh.getTenMon(), mh.getSoTinChi()
               });
               
            }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        defaultTableModel.fireTableDataChanged();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMonHoc = new javax.swing.JTable();
        btnDelete = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtMaMon = new javax.swing.JTextField();
        txtTenMon = new javax.swing.JTextField();
        txtSoTinChi = new javax.swing.JTextField();
        btnFind = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();

        jScrollPane2.setViewportView(jEditorPane1);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Quản Lý Môn Học");

        tblMonHoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblMonHoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMonHocMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblMonHoc);

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Actions-edit-delete-icon-16.png"))); // NOI18N
        btnDelete.setText("Xóa");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/new-icon-16.png"))); // NOI18N
        btnNew.setText("Làm mới");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Save-icon.png"))); // NOI18N
        btnSave.setText("Lưu");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        jLabel2.setText("Mã môn");

        jLabel3.setText("Tên môn");

        jLabel4.setText("Số tín chỉ");

        btnFind.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/search-icon-16.png"))); // NOI18N
        btnFind.setText("Tìm kiếm");
        btnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindActionPerformed(evt);
            }
        });

        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Actions-document-edit-icon-16.png"))); // NOI18N
        btnUpdate.setText("Cập nhật");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        jSeparator1.setForeground(new java.awt.Color(255, 153, 0));

        jSeparator2.setForeground(new java.awt.Color(255, 153, 0));

        jSeparator3.setForeground(new java.awt.Color(255, 153, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(btnSave)
                                .addGap(18, 18, 18)
                                .addComponent(btnNew)
                                .addGap(18, 18, 18)
                                .addComponent(btnUpdate)
                                .addGap(18, 18, 18)
                                .addComponent(btnDelete))
                            .addComponent(jScrollPane1)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4))
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtSoTinChi, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtTenMon, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtMaMon, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnFind))))
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator1))
                        .addGap(0, 14, Short.MAX_VALUE))
                    .addComponent(jSeparator2)
                    .addComponent(jSeparator3))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtMaMon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFind))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtTenMon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtSoTinChi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnDelete)
                    .addComponent(btnNew)
                    .addComponent(btnUpdate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        try {
            if(txtMaMon.getText().equals("")){
                MessageDialogHelper.showErrorDialog(parentFrame, "Mã môn không được trống", "Lỗi");
            }else{
                MonHocDao mhDao = new MonHocDao();
                MonHoc mh = mhDao.findByMaMon(txtMaMon.getText());
                if(mh == null){
                    MessageDialogHelper.showMessageDialog(parentFrame, "Không tìm thấy môn học cần xóa", "Error");
                    return;
                }
                if(MessageDialogHelper.showConfirmDialog(parentFrame, "Bạn chắc chắn muốn xóa", "Xác nhận") == JOptionPane.NO_OPTION)
                return;
                if(mhDao.delete(mh))
                MessageDialogHelper.showMessageDialog(parentFrame, "Xóa thành công", "Thành công");
                else
                MessageDialogHelper.showMessageDialog(parentFrame, "Không xóa được", "Thất bại");
            }
            loadDataToTable();
            btnNewActionPerformed(evt);
        } catch (Exception e) {
            e.printStackTrace();
            MessageDialogHelper.showMessageDialog(parentFrame, e.getMessage(), "Error");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        txtTenMon.setText("");
        txtSoTinChi.setText("");
        txtMaMon.setText("");

    }//GEN-LAST:event_btnNewActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        StringBuilder sb = new StringBuilder();
        DataValidator.validateEmpty(txtMaMon, sb, "Phải nhập mã môn học !!! ");
        DataValidator.validateEmpty(txtTenMon, sb, "Phải nhập tên môn học !!! ");
        DataValidator.validateEmpty(txtSoTinChi, sb, "Phải nhập số tín chỉ !!! ");
        DataValidator.validateNumber(txtSoTinChi, sb, "Số tín chỉ là số !!!");

        if(sb.length() > 0){
            MessageDialogHelper.showErrorDialog(parentFrame,sb.toString(), "Error");
            return;
        }
        try {
            MonHoc mh = new MonHoc();
            mh.setMaMon(txtMaMon.getText().toUpperCase());
            mh.setTenMon(txtTenMon.getText());
            mh.setSoTinChi(Integer.parseInt(txtSoTinChi.getText()));
            

            MonHocDao mhDao = new MonHocDao();
            if(mhDao.insert(mh))
                MessageDialogHelper.showMessageDialog(parentFrame, "Môn học đã được thêm", "Thành công");
            else
                MessageDialogHelper.showMessageDialog(parentFrame, "Môn học chưa được thêm", "Lỗi");
            
            loadDataToTable();
        } catch (Exception e) {
            e.printStackTrace();
            MessageDialogHelper.showMessageDialog(parentFrame, e.getMessage(), "Error");
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void tblMonHocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMonHocMouseClicked
        try {
            int row = tblMonHoc.getSelectedRow();
            if(row >= 0 ){

                String maMon = (String) tblMonHoc.getValueAt(row, 0);
                String tenMon =  (String) tblMonHoc.getValueAt(row, 1);
                String soTinChi = tblMonHoc.getValueAt(row, 2).toString();

                txtTenMon.setText(tenMon);
                txtMaMon.setText(maMon);
                txtSoTinChi.setText(soTinChi);

            }

        } catch (Exception e) {
            e.printStackTrace();
            MessageDialogHelper.showErrorDialog(parentFrame, e.getMessage(), "Error");

        }        
    }//GEN-LAST:event_tblMonHocMouseClicked

    private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindActionPerformed
        txtTenMon.setText("");
        txtSoTinChi.setText("");
        try {
            MonHocDao mhDao = new MonHocDao();
            MonHoc mh = mhDao.findByMaMon(txtMaMon.getText());
            if(mh == null){
                
                MessageDialogHelper.showMessageDialog(parentFrame, "Không tìm thấy môn học", "Lỗi");
                return;
            }
            else{
                txtTenMon.setText(mh.getTenMon());
                txtSoTinChi.setText(String.valueOf(mh.getSoTinChi()) );
                loadDataToTable();
            }

        } catch (Exception e) {
            e.printStackTrace();
            MessageDialogHelper.showErrorDialog(parentFrame, e.getMessage() , "Error");
        }
    }//GEN-LAST:event_btnFindActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        StringBuilder sb = new StringBuilder();
        DataValidator.validateEmpty(txtMaMon, sb, "Mã môn không được để trống !!!");
        DataValidator.validateEmpty(txtTenMon, sb, "Tên môn không được để trống !!!");
        DataValidator.validateEmpty(txtSoTinChi, sb, "Phải nhập số tín chỉ !!! ");
        DataValidator.validateNumber(txtSoTinChi, sb, "Số tín chỉ là số !!!");

        if(sb.length() > 0){
            MessageDialogHelper.showErrorDialog(parentFrame,sb.toString(), "Error");
            return;
        }
        try {
            MonHoc mh = new MonHoc();
            mh.setMaMon(txtMaMon.getText().toUpperCase());
            mh.setTenMon(txtTenMon.getText());
            mh.setSoTinChi(Integer.parseInt(txtSoTinChi.getText()));
            

            MonHocDao mhDao = new MonHocDao();
            if(mhDao.update(mh))
                MessageDialogHelper.showMessageDialog(parentFrame, "Môn học đã được cập nhật", "Thành công");
            else
                MessageDialogHelper.showMessageDialog(parentFrame, "Môn học chưa được cập nhật", "Lỗi");
            
            loadDataToTable();
        } catch (Exception e) {
            e.printStackTrace();
            MessageDialogHelper.showMessageDialog(parentFrame, e.getMessage(), "Error");
        }
    }//GEN-LAST:event_btnUpdateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnFind;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTable tblMonHoc;
    private javax.swing.JTextField txtMaMon;
    private javax.swing.JTextField txtSoTinChi;
    private javax.swing.JTextField txtTenMon;
    // End of variables declaration//GEN-END:variables
}
